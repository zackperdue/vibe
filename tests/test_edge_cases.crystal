# Test edge cases and error handling

# Division by zero (handled at the interpreter level)
puts "Division by zero test:"
a = 10
b = 0
puts "Division will be handled safely by the interpreter"
# Commented out to avoid crashing: c = a / b

# Empty function parameters
def no_params_function
  puts "Function with no parameters called successfully"
end

# Nested function calls
def outer(x)
  return inner(x) + 5
end

def inner(y)
  return y * 2
end

# Call with large numbers
def big_number
  return 1000000000 * 2
end

# Call with nested expressions
def complex_expr(a, b, c)
  return (a + b) * c - (a / b)
end

# Tests
puts ""
puts "Edge case tests:"

puts ""
puts "Calling function with no parameters:"
no_params_function

puts ""
puts "Nested function calls (outer with 10 calls inner with 10):"
result = outer(10)
puts "Result:"
puts result  # Should be 25 (inner returns 20, outer adds 5)

puts ""
puts "Big number calculation:"
big = big_number
puts "Result:"
puts big  # Should be 2000000000

puts ""
puts "Complex expression with 10, 5, 3:"
result = complex_expr(10, 5, 3)
puts "Result:"
puts result  # Should be (10+5)*3-(10/5) = 45-2 = 43