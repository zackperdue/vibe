# Test function definitions and calls without parentheses for functions with no parameters

# Function with no parameters, defined without parentheses
def hello: string do
  return "Hello, world!"
end

# Function with no parameters, defined without parentheses, that directly calls puts
def greet: int do
  puts "Greetings from a function!"
  return 0
end

# Function with parameters (traditional style)
def add(a: int, b: int): int do
  return a + b
end

# A function that calls another function without parentheses
def call_hello: string do
  return hello
end

# Main function to run all tests
def main: int do
  # Testing function calls without parentheses
  puts "Testing functions without parentheses:"

  # Call hello without parentheses
  result = hello
  puts "Result from hello:"
  puts result  # Should print "Hello, world!"

  # Call hello with empty parentheses (should also work)
  result = hello()
  puts "Result from hello():"
  puts result  # Should print "Hello, world!"

  # Call greet without parentheses
  greet  # Should print "Greetings from a function!"

  # Call greet with empty parentheses (should also work)
  greet()  # Should print "Greetings from a function!"

  # Call add with parameters (requires parentheses)
  result = add(5, 3)
  puts "Result from add(5, 3):"
  puts result  # Should print 8

  # Call a function that calls another function without parentheses
  result = call_hello
  puts "Result from call_hello:"
  puts result  # Should print "Hello, world!"

  return 0
end

# Call the main function to run the tests
main